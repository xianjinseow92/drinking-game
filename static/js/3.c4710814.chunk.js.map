{"version":3,"sources":["components/GameSelectPage.tsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"names":["GameSelectPage","props","history","useHistory","variant","sx","textAlign","marginBottom","color","onClick","push","gameNames","higherOrLower","removeAllSlashes","cleanKebabString","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","overflow","textOverflow","whiteSpace","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","Typography","React","inProps","ref","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"mappings":"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","file":"static/js/3.c4710814.chunk.js","sourcesContent":["// Route-related\nimport { useHistory } from \"react-router\";\n\n// Layout\nimport Grid from \"@mui/material/Grid\";\nimport PageLayout from \"layout/PageLayout.component\";\n\n// UI Components\nimport Button from \"@mui/material/Button\";\n\n// Constants / Helpers\nimport { cleanKebabString, removeAllSlashes } from \"helpers/helpers\";\nimport { gameNames } from \"constants/constants\";\n\n// Typography\nimport { Typography } from \"@mui/material\";\n\n/**\n * Component serves as a Welcome Page & Control Panel to allow users to choose the game they want to play.\n * Upon selection of game, user should be re-directed to Selected Game via Route Navigation\n * @param props\n * @returns React.FC Component\n */\nconst GameSelectPage = (props: any) => {\n  const history = useHistory();\n\n  const goToHigherOrLowerGame = () => {\n    history.push(gameNames.higherOrLower);\n  };\n\n  return (\n    // Game Grid\n    <PageLayout>\n      <Typography\n        variant=\"h1\"\n        sx={{ textAlign: \"center\", marginBottom: \"20px\" }}\n      >\n        <b>Welcome to ze best drinking game of yo LIFE!</b>\n      </Typography>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={goToHigherOrLowerGame}\n      >\n        {removeAllSlashes(cleanKebabString(gameNames.higherOrLower))}\n      </Button>\n\n      {/* <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Box sx={{ bgcolor: \"#cfe8fc\", color: \"black\" }}>xs=12, md=6</Box>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box sx={{ bgcolor: \"#cfe8fc\", color: \"black\" }}>xs=12, md=6</Box>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={goToHigherOrLowerGame}\n          >\n            {removeAllSlashes(cleanKebabString(gameNames.higherOrLower))}\n          </Button>\n        </Grid>\n      </Grid> */}\n    </PageLayout>\n  );\n};\n\nexport default GameSelectPage;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;"],"sourceRoot":""}