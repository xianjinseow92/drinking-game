{"version":3,"sources":["components/higher-or-lower/HigherOrLower.component.tsx","../node_modules/@mui/material/Container/containerClasses.js","../node_modules/@mui/material/Container/Container.js","layout/PageLayout.component.tsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"names":["HigherOrLowerGameBoard","props","useState","deck_id","remaining","shuffled","success","cards","deck","setDeck","isFetchingCard","setIsFetchingCard","useEffect","fetch","then","res","json","data","drawCard","sx","undefined","src","image","alt","value","variant","color","onClick","disabled","marginBottom","event","getRandomElementFromArray","getContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ContainerRoot","styled","name","overridesResolver","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","theme","_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","unit","Math","max","xs","Container","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","PageLayout","height","Box","flexDirection","alignItems","justifyContent","children","getTypographyUtilityClass","TypographyRoot","align","noWrap","gutterBottom","paragraph","margin","typography","textAlign","overflow","textOverflow","whiteSpace","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","Typography","themeProps","transformDeprecatedColors","extendSxProp","variantMapping","Component"],"mappings":"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","file":"static/js/4.15882c5c.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\n// Layout\nimport PageLayout from \"layout/PageLayout.component\";\n\n// Common UI Components\nimport Button from \"@mui/material/Button\";\n\n// Typography\nimport Typography from \"@mui/material/Typography\";\n\n// Types\nimport { IDeck } from \"types/types\";\n\n// Helpers\nimport { getRandomElementFromArray } from \"helpers/helpers\";\n\nconst HigherOrLowerGameBoard = (props: any) => {\n  // Control Variables\n  const [deck, setDeck] = useState<IDeck>({\n    deck_id: \"\",\n    remaining: 52,\n    shuffled: false,\n    success: false,\n    cards: [],\n  });\n  const randomFetchingMessages = [\n    \"I be fetchinnn\",\n    \"Drawin a CARDD\",\n    \"Pls wait bruh\",\n  ];\n\n  const [isFetchingCard, setIsFetchingCard] = useState(false);\n  const numCardsToDraw: number = 1;\n\n  useEffect(() => {\n    // Load deck when Component loads (pull data);\n    fetch(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\")\n      .then((res) => res.json())\n      .then((data) => {\n        setDeck({ ...data, cards: [] });\n      });\n  }, []);\n\n  const drawCard = () => {\n    /**\n     * Well.. draws a card. LoL\n     */\n    setIsFetchingCard(true); // fetching card !! when fetched successfully set to false\n    fetch(\n      `https://deckofcardsapi.com/api/deck/${deck.deck_id}/draw/?count=${numCardsToDraw}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setDeck(data);\n        setIsFetchingCard(false);\n      });\n  };\n\n  const reshuffleDeck = (event: any) => {\n    setIsFetchingCard(true); // fetching card !! when fetched successfully set to false\n    fetch(`https://deckofcardsapi.com/api/deck/${deck.deck_id}/shuffle/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setDeck({ ...data, cards: [] });\n        drawCard();\n        setIsFetchingCard(false);\n      });\n  };\n\n  return (\n    <PageLayout sx={{}}>\n      {/* Show nothing first if there are no cards in the deck */}\n      {deck.cards[0] === undefined ? (\n        // Placeholder to show nothing first\n        <div></div>\n      ) : (\n        <img src={deck.cards[0].image} alt={deck.cards[0].value} />\n      )}\n      {/* Notify user that deck has finished */}\n      {deck.remaining === 0 && deck.cards[0] === undefined && (\n        <div>You have finished the pile !</div>\n      )}\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={drawCard}\n        disabled={!deck.success}\n        sx={{marginBottom: \"10px\"}}\n      >\n        {deck.remaining === 52 ? \"Begin Game\" : \"Draw Card\"}\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={reshuffleDeck}>\n        Reshuffle Deck\n      </Button>\n      <Typography variant=\"subtitle1\">\n        Cards remaining: {deck.remaining}\n      </Typography>\n      {isFetchingCard && deck.remaining !== 0 && (\n        <Typography variant=\"subtitle1\">\n          {getRandomElementFromArray(randomFetchingMessages)}\n        </Typography>\n      )}\n    </PageLayout>\n  );\n};\n\nexport default HigherOrLowerGameBoard;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiContainer', slot);\n}\nconst containerClasses = generateUtilityClasses('MuiContainer', ['root', 'disableGutters', 'fixed', 'maxWidthXs', 'maxWidthSm', 'maxWidthMd', 'maxWidthLg', 'maxWidthXl']);\nexport default containerClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getContainerUtilityClass } from './containerClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\n\nconst ContainerRoot = styled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  width: '100%',\n  marginLeft: 'auto',\n  boxSizing: 'border-box',\n  marginRight: 'auto',\n  display: 'block'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}), ({\n  theme,\n  ownerState\n}) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n  const value = theme.breakpoints.values[breakpoint];\n\n  if (value !== 0) {\n    acc[theme.breakpoints.up(breakpoint)] = {\n      maxWidth: `${value}${theme.breakpoints.unit}`\n    };\n  }\n\n  return acc;\n}, {}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.maxWidth === 'xs' && {\n  [theme.breakpoints.up('xs')]: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n  [theme.breakpoints.up(ownerState.maxWidth)]: {\n    maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n  }\n}));\nconst Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  });\n\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    fixed,\n    maxWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ContainerRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Container;","import { Box, Container } from \"@mui/material\";\n\nconst PageLayout = (props: any) => {\n  return (\n    <Container\n      component=\"section\"\n      sx={{ width: \"100%\", height: \"100%\", ...props?.sx }}\n    >\n      <Box\n        sx={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {props.children}\n      </Box>\n    </Container>\n  );\n};\n\nexport default PageLayout;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;"],"sourceRoot":""}