{"version":3,"sources":["components/GameSelectPage.tsx","../node_modules/@mui/material/Container/containerClasses.js","../node_modules/@mui/material/Container/Container.js","layout/PageLayout.component.tsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"names":["GameSelectPage","props","history","useHistory","variant","sx","textAlign","marginBottom","color","onClick","push","gameNames","higherOrLower","removeAllSlashes","cleanKebabString","getContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ContainerRoot","styled","name","overridesResolver","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","theme","_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","unit","Math","max","xs","Container","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","PageLayout","height","Box","flexDirection","alignItems","justifyContent","children","getTypographyUtilityClass","TypographyRoot","align","noWrap","gutterBottom","paragraph","margin","typography","overflow","textOverflow","whiteSpace","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","Typography","themeProps","transformDeprecatedColors","extendSxProp","variantMapping","Component"],"mappings":"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","file":"static/js/3.0aa98f4d.chunk.js","sourcesContent":["// Route-related\nimport { useHistory } from \"react-router\";\n\n// Layout\nimport Grid from \"@mui/material/Grid\";\nimport PageLayout from \"layout/PageLayout.component\";\n\n// UI Components\nimport Button from \"@mui/material/Button\";\n\n// Constants / Helpers\nimport { cleanKebabString, removeAllSlashes } from \"helpers/helpers\";\nimport { gameNames } from \"constants/constants\";\n\n// Typography\nimport { Typography } from \"@mui/material\";\n\n/**\n * Component serves as a Welcome Page & Control Panel to allow users to choose the game they want to play.\n * Upon selection of game, user should be re-directed to Selected Game via Route Navigation\n * @param props\n * @returns React.FC Component\n */\nconst GameSelectPage = (props: any) => {\n  const history = useHistory();\n\n  const goToHigherOrLowerGame = () => {\n    history.push(gameNames.higherOrLower);\n  };\n\n  return (\n    // Game Grid\n    <PageLayout>\n      <Typography\n        variant=\"h1\"\n        sx={{ textAlign: \"center\", marginBottom: \"20px\" }}\n      >\n        <b>Welcome to ze best drinking game of yo LIFE!</b>\n      </Typography>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={goToHigherOrLowerGame}\n      >\n        {removeAllSlashes(cleanKebabString(gameNames.higherOrLower))}\n      </Button>\n\n      {/* <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Box sx={{ bgcolor: \"#cfe8fc\", color: \"black\" }}>xs=12, md=6</Box>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Box sx={{ bgcolor: \"#cfe8fc\", color: \"black\" }}>xs=12, md=6</Box>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={goToHigherOrLowerGame}\n          >\n            {removeAllSlashes(cleanKebabString(gameNames.higherOrLower))}\n          </Button>\n        </Grid>\n      </Grid> */}\n    </PageLayout>\n  );\n};\n\nexport default GameSelectPage;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiContainer', slot);\n}\nconst containerClasses = generateUtilityClasses('MuiContainer', ['root', 'disableGutters', 'fixed', 'maxWidthXs', 'maxWidthSm', 'maxWidthMd', 'maxWidthLg', 'maxWidthXl']);\nexport default containerClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getContainerUtilityClass } from './containerClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\n\nconst ContainerRoot = styled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  width: '100%',\n  marginLeft: 'auto',\n  boxSizing: 'border-box',\n  marginRight: 'auto',\n  display: 'block'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}), ({\n  theme,\n  ownerState\n}) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n  const value = theme.breakpoints.values[breakpoint];\n\n  if (value !== 0) {\n    acc[theme.breakpoints.up(breakpoint)] = {\n      maxWidth: `${value}${theme.breakpoints.unit}`\n    };\n  }\n\n  return acc;\n}, {}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.maxWidth === 'xs' && {\n  [theme.breakpoints.up('xs')]: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n  [theme.breakpoints.up(ownerState.maxWidth)]: {\n    maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n  }\n}));\nconst Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  });\n\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    fixed,\n    maxWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ContainerRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Container;","import { Box, Container } from \"@mui/material\";\n\nconst PageLayout = (props: any) => {\n  return (\n    <Container\n      component=\"section\"\n      sx={{ width: \"100%\", height: \"100%\", ...props?.sx }}\n    >\n      <Box\n        sx={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {props.children}\n      </Box>\n    </Container>\n  );\n};\n\nexport default PageLayout;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;"],"sourceRoot":""}