{"version":3,"sources":["../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","components/GameSelectPage.tsx"],"names":["getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","Typography","React","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","GameSelectPage","history","useHistory","goToGame","gamePath","push","sx","allGameRoutes","map","gameRoute","onClick","bind","removeAllSlashes","cleanKebabString"],"mappings":"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","file":"static/js/3.08f354d5.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","// Route-related\nimport { useHistory } from \"react-router\";\nimport { allGameRoutes } from \"routes\";\n\n// Layout\nimport PageLayout from \"layout/PageLayout.component\";\n\n// UI Components\nimport Button from \"@mui/material/Button\";\n\n// Constants / Helpers\nimport { cleanKebabString, removeAllSlashes } from \"helpers/helpers\";\n\n// Typography\nimport { Typography } from \"@mui/material\";\n\n/**\n * Component serves as a Welcome Page & Control Panel to allow users to choose the game they want to play.\n * Upon selection of game, user should be re-directed to Selected Game via Route Navigation\n * @param props\n * @returns React.FC Component\n */\n\nconst GameSelectPage = (props: any) => {\n  // styles\n  const marginBottom = \"10px\";\n\n  // hooks\n  const history = useHistory();\n\n  // functions\n  const goToGame = (gamePath: string) => {\n    history.push(gamePath);\n  };\n\n  return (\n    // Game Grid\n    <PageLayout>\n      <Typography\n        variant=\"h1\"\n        sx={{ textAlign: \"center\", marginBottom: \"20px\" }}\n      >\n        <b>Welcome to ze best drinking game of yo LIFE!</b>\n      </Typography>\n\n      {/* All Buttons to Games */}\n      {allGameRoutes.map((gameRoute) => (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={goToGame.bind(this, gameRoute.name)}\n          sx={{marginBottom: marginBottom}}\n        >\n          {removeAllSlashes(cleanKebabString(gameRoute.name))}\n        </Button>\n      ))}\n    </PageLayout>\n  );\n};\n\nexport default GameSelectPage;\n"],"sourceRoot":""}