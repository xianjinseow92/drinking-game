{"version":3,"sources":["styles/theme.ts","components/go-back-to-main-page/GoBackToMainpage.tsx","App.tsx","reportWebVitals.ts","index.tsx","routes.ts","helpers/helpers.ts","constants/constants.ts"],"names":["colorSchemeTwo","theme","createTheme","palette","primary","main","secondary","background","default","typography","fontFamily","components","MuiCssBaseline","styleOverrides","html","height","body","responsiveFontSizes","GoBackToMainPage","props","history","useHistory","styles","makeStyles","root","width","position","bottom","left","display","justifyContent","Box","className","Button","variant","onClick","push","mainPage","color","renderRoute","route","path","name","component","App","location","useLocation","ThemeProvider","CssBaseline","fallback","exact","to","map","routes","pathname","isNotMainRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","GameSelectPage","lazy","HigherOrLowerGameBoard","gameNames","higherOrLower","cleanKebabString","str","splitStr","split","capitalize","join","capitalizeFirstLetterOfEachWord","replaceAll","removeAllSlashes","getRandomElementFromArray","arr","Math","floor","random","length","pathName"],"mappings":"2NAWMA,EACK,UADLA,EAEO,UAiBTC,EAAQC,YAAY,CACtBC,QAAS,CACPC,QAAS,CACPC,KAAML,GAERM,UAAW,CACTD,KAAML,GAERO,WAAY,CACVC,QAASR,IAGbS,WAAY,CACRC,WAAY,8BAGhBC,WAAY,CACVC,eAAgB,CACdC,eAAe,eA9BE,CACrBC,KAAM,CACJC,OAAQ,QAEVC,KAAM,CACJD,OAAQ,OACR,UAAW,CACTA,OAAQ,eAgCCd,EAFfA,EAAQgB,YAAoBhB,G,qGCVbiB,EA5BU,SAACC,GACtB,IAAMC,EAAUC,cAGVC,EAASC,aAAW,SAACtB,GAAD,MAAiB,CACvCuB,KAAM,CACFC,MAAO,OACPC,SAAU,QACVC,OAAQ,OACRC,KAAM,EACNC,QAAS,OACTC,eAAgB,aAPTP,GAef,OACI,cAACQ,EAAA,EAAD,CAAKC,UAAWV,EAAOE,KAAvB,SACI,cAACS,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QANX,WACrBf,EAAQgB,KAAKC,MAK8CC,MAAM,YAA7D,mCChBNC,EAAc,SAACC,GACnB,OACE,cAAC,IAAD,CAAwBC,KAAMD,EAAME,KAAMC,UAAWH,EAAMG,WAA/CH,EAAME,OA+BPE,MA3Bf,WACE,IAAMC,EAAWC,cAEjB,OACE,eAACC,EAAA,EAAD,CAAe9C,MAAOA,EAAtB,UACE,cAAC+C,EAAA,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAACT,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUU,GAAId,QAEfe,IAAIC,IAAQd,KALFM,EAASS,YAUvBC,YAAeV,EAASS,WACzBT,EAASS,WAAajB,IAAW,IAC/B,cAAC,EAAD,IAEA,OCnCOmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCDdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,gCClBA,qDAQMa,EAAiBC,gBAAK,kBAAM,iCAC5BC,EAAyBD,gBAC7B,kBAAM,iCAIKjC,EAAW,iBAClBgB,EAAkB,CACtB,CAAEX,KAAML,EAAUM,UAAW0B,GAC7B,CAAE3B,KAAM8B,IAAUC,cAAe9B,UAAW4B,IAG/BlB,O,gCCpBf,6KAYaqB,EAAmB,SAACC,GAG7B,OAToC,SAACA,GACrC,IAAMC,EAAWD,EAAIE,MAAM,KAE3B,OADoBzB,cAAIwB,EAAUE,KACfC,KAAK,KAMjBC,CADkBL,EAAIM,WAAW,IAAK,OAIpCC,EAAmB,SAACP,GAC7B,OAAOA,EAAIM,WAAW,IAAK,KAGlBE,EAA4B,SAACC,GACtC,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,UAIjCjC,EAAiB,SAACkC,GAC3B,OAAIA,IAAapD,M,gCC5BrB,kCAAO,IAAMmC,EAAY,CACrBC,cAAe,sB","file":"static/js/main.0a9f743b.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from \"@mui/material/styles\";\n\nconst colorSchemeOne = {\n  primary: \"#df0079\",\n  complementary: \"#00df64\",\n  analogousOne: \"#d400df\",\n  analogusTwo: \"#df000b\",\n  triadicOne: \"#df6400\",\n  triadicTwo: \"#7bdf00\",\n};\n\nconst colorSchemeTwo = {\n  primary: \"#df0079\",\n  secondary: \"#ff5c01\",\n  tertiary: \"#ff9a00\",\n  backup: \"#c632ac\",\n};\n\nconst rootBodyStyles = {\n  html: {\n    height: \"100%\",\n  },\n  body: {\n    height: \"100%\",\n    \"& #root\": {\n      height: \"100%\",\n    },\n  },\n};\n\nlet theme = createTheme({\n  palette: {\n    primary: {\n      main: colorSchemeTwo.primary,\n    },\n    secondary: {\n      main: colorSchemeTwo.secondary,\n    },\n    background: {\n      default: colorSchemeTwo.primary,\n    },\n  },\n  typography: {\n      fontFamily: \"'Preahvihear', sans-serif;\"\n  },\n  // Component overrides\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        ...rootBodyStyles,\n      },\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme); // add responsive typography\n\nexport default theme;\n","// Route-related\nimport { mainPage } from \"routes\";\nimport { useHistory } from \"react-router\";\n\n// Common UI Components\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\n\n// Styles\nimport { makeStyles } from \"@mui/styles\";\n\n/**\n * Serves to redirect users back to Game Select Page.\n * Will render if route name is !== \"/drinking-game\" (controleld via App Component)\n * @param props \n * @returns React.FC Component\n */\nconst GoBackToMainPage = (props: any) => {\n    const history = useHistory();\n\n    // Component styles\n    const styles = makeStyles((theme: any) => ({\n        root: {\n            width: \"100%\",\n            position: \"fixed\",\n            bottom: \"10px\",\n            left: 0,\n            display: \"flex\",\n            justifyContent: \"center\"\n        }\n    }))();\n\n    const returnToMainPage = () => {\n        history.push(mainPage)\n    };\n\n    return (\n        <Box className={styles.root}>\n            <Button variant=\"contained\" onClick={returnToMainPage} color=\"secondary\">\n                Back to all games!\n            </Button>\n        </Box>\n    );\n}\n\nexport default GoBackToMainPage;","import { Suspense } from \"react\";\n\n// Styles\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport theme from \"styles/theme\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\n// Route-related\nimport { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\nimport routes from \"routes\";\nimport { mainPage } from \"routes\";\n\n// Utilities\nimport map from \"lodash/map\";\n\n// Helpers\nimport { isNotMainRoute } from \"helpers/helpers\";\n\n// Components\nimport ClockLoader from \"react-spinners/ClockLoader\";\nimport GoBackToMainPage from \"components/go-back-to-main-page/GoBackToMainpage\";\n\nconst renderRoute = (route: any) => {\n  return (\n    <Route key={route.name} path={route.name} component={route.component} />\n  );\n};\n\nfunction App() {\n  const location = useLocation();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Suspense fallback={<ClockLoader />}>\n        <Switch key={location.pathname}>\n          {/* Redirect to main page on base url */}\n          <Route exact path=\"/\">\n            <Redirect to={mainPage}/>\n          </Route>\n          {map(routes, renderRoute)}\n        </Switch>\n      </Suspense>\n\n      {/* Allows user to go back to Game Select Page when accessing other pages */}\n      {isNotMainRoute(location.pathname) &&\n      location.pathname !== mainPage + \"/\" ? (\n        <GoBackToMainPage />\n      ) : (\n        \"\"\n      )}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { lazy } from \"react\";\n\n// Types\nimport { IPath } from \"types/types\";\n// Constants\nimport { gameNames } from \"constants/constants\";\n\n// Games / Components\nconst GameSelectPage = lazy(() => import(\"components/GameSelectPage\"));\nconst HigherOrLowerGameBoard = lazy(\n  () => import(\"components/higher-or-lower/HigherOrLower.component\")\n);\n\n// All Routes\nexport const mainPage = \"/drinking-game\";\nconst routes: IPath[] = [\n  { name: mainPage, component: GameSelectPage },\n  { name: gameNames.higherOrLower, component: HigherOrLowerGameBoard },\n];\n\nexport default routes;\n","import { map } from \"lodash\";\nimport capitalize from \"lodash/capitalize\";\n\n// Route-related\nimport { mainPage } from \"routes\";\n\nconst capitalizeFirstLetterOfEachWord = (str: string): string => {\n    const splitStr = str.split(\" \"); // [\"this\", \"is\", \"a\"];\n    const newSplitStr = map(splitStr, capitalize);\n    return newSplitStr.join(\" \");\n}\n\nexport const cleanKebabString = (str: string): string => {\n    // Removes hyphen on strings.\n    const strRemovedDashes = str.replaceAll(\"-\", \" \");\n    return capitalizeFirstLetterOfEachWord(strRemovedDashes);\n};\n\nexport const removeAllSlashes = (str: string): string => {\n    return str.replaceAll(\"/\", \"\");\n}\n\nexport const getRandomElementFromArray = (arr: any[]): string => {\n    return arr[Math.floor(Math.random() * arr.length)];\n}\n\n// Route-related\nexport const isNotMainRoute = (pathName: string): boolean => {\n    if (pathName !== mainPage) return true;\n    return false;\n}","export const gameNames = {\n    higherOrLower: \"/higher-or-lower\",\n};"],"sourceRoot":""}